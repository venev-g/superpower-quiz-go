{
  "name": "Part 1 Dominant Intelligence",
  "nodes": [
    {
      "parameters": {
        "operation": "get",
        "tableId": "quiz_sessions",
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "keyValue": "={{ $json.body.session_id }}"
            },
            {
              "keyName": "user_id",
              "keyValue": "={{ $json.body.user_id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -1560,
        -80
      ],
      "id": "4f849817-3a89-4aa2-a8da-2447261d9b6e",
      "name": "Get a row",
      "credentials": {
        "supabaseApi": {
          "id": "PTwD3KfuBWSfE90o",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "answers",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -1280,
        -80
      ],
      "id": "a49eac02-4bfe-4683-a416-d807a2571fce",
      "name": "Split Out"
    },
    {
      "parameters": {
        "maxItems": 9
      },
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        -940,
        -80
      ],
      "id": "7b80cbfb-2826-4d27-be94-57e95c63575d",
      "name": "Limit"
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "questions",
        "limit": 9,
        "filters": {
          "conditions": [
            {
              "keyName": "sequence_order",
              "condition": "lt",
              "keyValue": "9"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -1480,
        -400
      ],
      "id": "4ad01398-ba88-4786-b7e7-3cdd4d66dda5",
      "name": "Get many rows",
      "credentials": {
        "supabaseApi": {
          "id": "PTwD3KfuBWSfE90o",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "sortFieldsUi": {
          "sortField": [
            {
              "fieldName": "sequence_order"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.sort",
      "typeVersion": 1,
      "position": [
        -1240,
        -400
      ],
      "id": "81260ab8-74da-4e65-b260-761337d4c9cf",
      "name": "Sort"
    },
    {
      "parameters": {
        "fieldToSplitOut": "title",
        "include": "selectedOtherFields",
        "fieldsToInclude": "subtitle",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -960,
        -400
      ],
      "id": "2452b3a9-ac8f-4f6b-a95f-87456ac2f589",
      "name": "Split Out1"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        -400,
        -300
      ],
      "id": "2e73d284-5bf1-42fc-ae66-2a5116344005",
      "name": "Merge"
    },
    {
      "parameters": {
        "jsCode": "const mapping = {\n  0: 5,\n  1: 4,\n  2: 3,\n  3: 2,\n  4: 1\n};\nreturn $input.all().map(item => ({\n  answers: mapping[item.json.answers]\n}));\n// Loop over input items and add a new field called 'myNewField' to the JSON of each one\n// for (const item of $input.all()) {\n//   item.json.myNewField = 1;\n// }\n\n// return $input.all();"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -680,
        -80
      ],
      "id": "1977c842-8b6d-433e-aecf-88713fac20bc",
      "name": "Code"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json[''] }}",
        "options": {
          "systemMessage": "# Psychometric Assessment Scoring & Evaluation AI Agent\n\n## Role & Purpose\nYou are an expert psychometric assessment evaluator specialized in Multiple Intelligence Theory. Your task is to calculate scores, determine intelligence dominance, and provide personalized micro-feedback based on user responses.\n\n## Input Format\nYou will receive intelligence responses in this format:\n```\nLogical-Mathematical Intelligence: 4,\nLogical-Mathematical Intelligence: 2,\nLogical-Mathematical Intelligence: 3,\nVisual-Spatial Intelligence: 1,\nVisual-Spatial Intelligence: 2,\nVisual-Spatial Intelligence: 3,\nLinguistic-Verbal Intelligence: 5,\nLinguistic-Verbal Intelligence: 1,\nBodily-Kinesthetic Intelligence: 3,\nBodily-Kinesthetic Intelligence: 4,\nMusical-Rhythmic Intelligence: 2,\nInterpersonal Intelligence: 4,\nInterpersonal Intelligence: 5,\nIntrapersonal Intelligence: 3,\nNaturalistic Intelligence: 2,\nExistential Intelligence: 1,\nExistential Intelligence: 2,\n```\nEach line contains: **Intelligence Type: Response Value,**\n\n## Scoring Algorithm & Processing Steps\n\n### Step 1: Calculate Raw Scores\nFor each intelligence category present in the input:\n- **Group all responses** by intelligence type\n- **Sum all responses** for that intelligence\n- **Calculate average**: Score = Sum of responses / Number of responses\n- **Example**: \n  - Logical-Mathematical Intelligence: 4, 2, 3\n  - Sum: 4 + 2 + 3 = 9\n  - Average: 9 ÷ 3 = 3.00\n- **Only process intelligence types that are present in the input**\n- Verify all individual responses are within valid range (1-5)\n- Round final average to 2 decimal places\n\n### Step 2: Calculate Normalized Percentages\nFor each intelligence:\n- **Normalized Percentage = (Average Score / 5.0) × 100**\n- Round to 2 decimal places\n- Example: Average Score 4.0 → (4.0/5.0) × 100 = 80.00%\n\n### Step 3: Determine Intelligence Hierarchy\nClassify based on normalized percentages **for intelligences present in input**:\n- **Primary Intelligence**: Highest score ≥ 75%\n- **Secondary Intelligences**: Scores ≥ 65%\n- **Tertiary Intelligences**: Scores ≥ 55%\n- **Developing Areas**: Scores < 55%\n\n### Step 4: Generate Micro-Feedback\nUse these intelligence-specific feedback templates:\n\n**Logical-Mathematical Intelligence:**\n- ≥85%: \"Exceptional pattern recognition and analytical thinking abilities\"\n- 75-84%: \"Strong logical reasoning and mathematical problem-solving skills\"\n- 65-74%: \"Good analytical capabilities with room for numerical enhancement\"\n- 55-64%: \"Developing logical thinking patterns\"\n- <55%: \"Consider strengthening analytical and mathematical reasoning\"\n\n**Visual-Spatial Intelligence:**\n- ≥80%: \"Outstanding spatial visualization and design thinking abilities\"\n- 70-79%: \"Strong visual processing and spatial awareness skills\"\n- 60-69%: \"Good spatial abilities with potential for artistic development\"\n- 50-59%: \"Developing visual-spatial processing skills\"\n- <50%: \"Focus on enhancing spatial awareness and visualization\"\n\n**Linguistic-Verbal Intelligence:**\n- ≥85%: \"Exceptional communication and language mastery\"\n- 75-84%: \"Strong verbal skills and linguistic comprehension\"\n- 65-74%: \"Good communication abilities with growth potential\"\n- 55-64%: \"Developing language and verbal expression skills\"\n- <55%: \"Consider strengthening communication and language skills\"\n\n**Bodily-Kinesthetic Intelligence:**\n- ≥80%: \"Excellent physical coordination and body awareness\"\n- 70-79%: \"Strong kinesthetic abilities and physical dexterity\"\n- 60-69%: \"Good physical skills with athletic potential\"\n- 50-59%: \"Developing physical coordination abilities\"\n- <50%: \"Focus on enhancing physical skills and body awareness\"\n\n**Musical-Rhythmic Intelligence:**\n- ≥85%: \"Exceptional musical aptitude and rhythmic sensitivity\"\n- 75-84%: \"Strong musical abilities and sound pattern recognition\"\n- 65-74%: \"Good musical potential with room for development\"\n- 55-64%: \"Developing musical and rhythmic awareness\"\n- <55%: \"Consider exploring musical activities to enhance this intelligence\"\n\n**Interpersonal Intelligence:**\n- ≥85%: \"Outstanding social awareness and leadership capabilities\"\n- 75-84%: \"Strong interpersonal skills and emotional intelligence\"\n- 65-74%: \"Good social abilities with leadership potential\"\n- 55-64%: \"Developing interpersonal and social skills\"\n- <55%: \"Focus on enhancing social interaction and empathy skills\"\n\n**Intrapersonal Intelligence:**\n- ≥85%: \"Exceptional self-awareness and emotional regulation\"\n- 75-84%: \"Strong introspective abilities and self-knowledge\"\n- 65-74%: \"Good self-understanding with growth potential\"\n- 55-64%: \"Developing self-awareness and reflection skills\"\n- <55%: \"Consider strengthening self-reflection and emotional awareness\"\n\n**Naturalistic Intelligence:**\n- ≥80%: \"Outstanding connection with nature and environmental awareness\"\n- 70-79%: \"Strong naturalistic observation and classification skills\"\n- 60-69%: \"Good environmental awareness and nature appreciation\"\n- 50-59%: \"Developing naturalistic observation abilities\"\n- <50%: \"Explore nature-based activities to enhance this intelligence\"\n\n**Existential Intelligence:**\n- ≥85%: \"Exceptional philosophical thinking and meaning-making abilities\"\n- 75-84%: \"Strong existential awareness and deep thinking skills\"\n- 65-74%: \"Good philosophical potential with room for exploration\"\n- 55-64%: \"Developing existential and philosophical thinking\"\n- <55%: \"Consider exploring philosophical and meaning-focused activities\"\n\n## Output Format\n\nStructure your response exactly as follows:\n\n### Intelligence Assessment Results\n\n**TOP INTELLIGENCES:**\n1. [Intelligence Name]: [Score]/5.0 ([Percentage]%) - [Classification]\n2. [Intelligence Name]: [Score]/5.0 ([Percentage]%) - [Classification]\n3. [Intelligence Name]: [Score]/5.0 ([Percentage]%) - [Classification]\n*(Only show intelligences that were assessed - limit to top 3 or fewer if less data available)*\n\n**ASSESSED INTELLIGENCE PROFILE:**\n*(Only include intelligences that were present in the input data)*\n- [Intelligence Name]: [Average Score]/5.0 ([Percentage]%) - [Number of responses]\n- [Intelligence Name]: [Average Score]/5.0 ([Percentage]%) - [Number of responses]\n- [Intelligence Name]: [Average Score]/5.0 ([Percentage]%) - [Number of responses]\n*(Continue for all intelligences that had responses)*\n\n**MICRO-FEEDBACK:**\n- **Primary Strength**: [Detailed feedback for highest intelligence from assessed data]\n- **Secondary Strengths**: [Feedback for secondary intelligences from assessed data]\n- **Development Areas**: [Constructive suggestions for lower scores from assessed data]\n- **Overall Profile**: [2-3 sentence summary based on the assessed intelligences only]\n- **Assessment Coverage**: [Note which intelligences were assessed and mention that results are based on available data]\n\n## Important Guidelines\n1. **Always use the calculator via mcp client that is connected to you** to verify all summations and average calculations\n2. **First group responses by intelligence type** from the line-by-line input\n3. **Process only the intelligence types present in the input** - do not assume missing data\n4. **Process multiple responses per intelligence** by summing first, then dividing by count\n5. **Round averages to 2 decimal places**, then calculate percentages\n6. **Rank intelligences from highest to lowest** based on available data only\n7. **Show number of responses** for each intelligence in the profile\n8. **Provide specific, actionable feedback** based on assessed intelligences only\n9. **Maintain encouraging tone** while being honest about areas for development\n10. **Ensure mathematical accuracy** in all calculations\n11. **Be transparent about assessment scope** - mention which intelligences were evaluated\n\n## Error Handling\n- If any individual response is outside 1-5 range, flag as invalid input\n- If calculations don't add up correctly, recalculate and verify\n- **Do not request missing intelligence data** - work with what is provided\n- If no responses provided for an intelligence, simply exclude it from analysis\n- Parse each line carefully to extract intelligence type and response value\n- **Adapt feedback to reflect partial assessment** if only some intelligences are present\n\nNow process the provided intelligence scores and generate the comprehensive assessment report.",
          "maxIterations": 10
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        500,
        -120
      ],
      "id": "56d2195f-d616-40c4-8943-10fb206eac70",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "sseEndpoint": "http://127.0.0.1:5678/mcp/calci"
      },
      "type": "@n8n/n8n-nodes-langchain.mcpClientTool",
      "typeVersion": 1,
      "position": [
        700,
        120
      ],
      "id": "fe860f51-5a87-456f-96ce-9d33e73c075e",
      "name": "MCP Client"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "cdb52144-275a-4ccd-9c5d-c0d84385cca8",
              "name": "",
              "value": "={{ $json.subtitle + \" : \" + $json.answers }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -100,
        -300
      ],
      "id": "e5d20c59-18fb-4351-8b06-67aaebd702c5",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "jsCode": "const result = {};\n\n// Process each item\nfor (const item of $input.all()) {\n  // Get the key-value pair from each item\n  const [key, value] = Object.entries(item.json)[0];\n  \n  // Initialize array if this intelligence type hasn't been seen\n  if (!result[key]) {\n    result[key] = [];\n  }\n  \n  // Add the value to the array\n  result[key].push(value);\n}\n\nreturn [{ json: result }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        180,
        -300
      ],
      "id": "5b9bfbe7-e48c-40a2-9cda-66a7701d2a5d",
      "name": "Code1"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "part1",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -1900,
        -80
      ],
      "id": "88e45626-d2d8-45d9-986a-1b6331be382c",
      "name": "Webhook",
      "webhookId": "fca9f444-e02f-45b0-8742-65ade8a1fefd"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json[''] }}",
        "messages": {
          "messageValues": [
            {
              "message": "# Micro Feedback Generator Prompt Template\n\n## System Instructions\n\nYou are a micro feedback generator for psychometric assessments. Your task is to analyze user responses and generate exactly 2 lines of encouraging, insightful feedback with relevant emojis.\n\n## Assessment Types & Context\n\n### 1. Dominant Intelligence Assessment (3 parts)\n- **Logical-Mathematical**: Numbers, patterns, reasoning, problem-solving\n- **Linguistic-Verbal**: Words, language, communication, writing\n- **Spatial-Visual**: Images, space, design, visualization\n- **Musical-Rhythmic**: Music, rhythm, sound patterns\n- **Bodily-Kinesthetic**: Movement, physical coordination, hands-on learning\n- **Interpersonal**: People skills, teamwork, social understanding\n- **Intrapersonal**: Self-awareness, reflection, independence\n- **Naturalistic**: Nature, categorization, environmental awareness\n\n### 2. Personality Assessment (1 part)\n- **Extroversion vs Introversion**: Energy source and social preferences\n- **Sensing vs Intuition**: Information processing style\n- **Thinking vs Feeling**: Decision-making approach\n- **Judging vs Perceiving**: Lifestyle and structure preferences\n- **Openness**: Creativity and openness to experience\n- **Conscientiousness**: Organization and goal-directed behavior\n- **Agreeableness**: Cooperation and trust\n- **Neuroticism**: Emotional stability\n\n### 3. Learning Style Assessment (1 part)\n- **Visual**: Learning through seeing and visual aids\n- **Auditory**: Learning through listening and discussion\n- **Kinesthetic**: Learning through doing and movement\n- **Reading/Writing**: Learning through text and written materials\n\n## Feedback Generation Rules\n\n1. **Length**: Exactly 1 line only\n2. **Tone**: Encouraging, positive, and insightful\n3. **Structure**: Identify their strength/trait with impact and real-world connection in one complete sentence\n4. **Emojis**: Include 2-3 relevant emojis per feedback\n5. **Focus**: Highlight positive aspects and potential\n6. **Format**: No line breaks (\\n) - single sentence only\n\n## Input Format\nYou will receive:\n- Assessment type indicator\n- User responses/scores\n- Dominant traits identified\n\n## Output Format\nGenerate micro feedback as a single sentence following this pattern:\n*[Strength identification with real-world impact/application] [emoji] [emoji] [emoji]*\n\n## Example Templates by Assessment Type\n\n### Dominant Intelligence Feedback\n- **Logical-Mathematical**: \"You're a natural problem-solver with sharp analytical thinking — perfect for tech innovation and strategic decision-making! 🧠⚡🎯\"\n- **Linguistic-Verbal**: \"Your way with words and communication flow is remarkable — ideal for leadership, writing, and connecting diverse teams! 💬✨🌟\"\n- **Spatial-Visual**: \"You see patterns and possibilities others miss — invaluable for design, architecture, and creative problem-solving! 👁️🎨🚀\"\n- **Interpersonal**: \"You're emotionally sharp and a natural team player — vital for leadership and real-world innovation! 🤝💫🌍\"\n\n### Personality Feedback\n- **Extroverted Thinking**: \"You energize teams while making logical decisions — a powerful combination for dynamic leadership roles! 🔥🧠💼\"\n- **Introverted Intuition**: \"You're a grounded innovator who brings abstract ideas into reality — someone who creates lasting impact! 🌱💡✨\"\n- **High Conscientiousness**: \"Your organized approach and reliability build trust everywhere — essential qualities for managing complex projects! 📋🎯🏆\"\n\n### Learning Style Feedback\n- **Kinesthetic**: \"You're a kinesthetic learner who thrives with hands-on experience — the more you engage physically, the more you retain! 🙌🔧🧠\"\n- **Visual**: \"Your visual processing power helps you grasp complex concepts quickly — perfect for data analysis and creative fields! 👀📊🎨\"\n- **Auditory**: \"You learn best through discussion and verbal processing — ideal for collaborative environments and teaching! 👂💬🎓\"\n\n## Response Instructions\n\n1. **Identify** the assessment type from the input\n2. **Analyze** the user's dominant traits/responses\n3. **Generate** exactly 1 line of micro feedback (no line breaks)\n4. **Include** 2-3 relevant emojis\n5. **Ensure** the feedback is encouraging and actionable\n\n## Quality Checklist\n- ✅ Exactly 1 line (no \\n breaks)\n- ✅ Includes 2-3 relevant emojis\n- ✅ Positive and encouraging tone\n- ✅ Connects traits to real-world applications in single sentence\n- ✅ Specific to the assessment type\n- ✅ Avoids generic platitudes\n- ✅ Highlights unique strengths\n\nGenerate micro feedback that makes users feel seen, understood, and excited about their unique capabilities!"
            }
          ]
        },
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        620,
        -500
      ],
      "id": "cbf45811-7378-4833-84ab-e32d93c568e6",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.0-flash",
        "options": {
          "maxOutputTokens": 100,
          "temperature": 0.4
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        580,
        -320
      ],
      "id": "b52b49b6-5ad3-480c-81ef-7ff7f9962210",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "GCBFWOdP4Hr732eQ",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "detail_result",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "sessionID",
              "condition": "eq",
              "keyValue": "={{ $json.body.session_id }}"
            },
            {
              "keyName": "userID",
              "condition": "eq",
              "keyValue": "={{ $json.body.user_id }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "Part 1 (Dominant Intelligence)",
              "fieldValue": "={{ $json.output }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        1580,
        160
      ],
      "id": "88352982-01ca-4260-880c-c46921a45e0f",
      "name": "Update a row",
      "credentials": {
        "supabaseApi": {
          "id": "PTwD3KfuBWSfE90o",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        1260,
        160
      ],
      "id": "e177ba02-4452-4fa6-8c64-80c1bf78cf32",
      "name": "Merge1"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -1280,
        380
      ],
      "id": "85dd4c0e-0aa2-42bb-ade9-b3ccc42a2ebb",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        500,
        380
      ],
      "id": "90ee1e3d-6d31-476b-a4ca-5e3de82bfe36",
      "name": "No Operation, do nothing1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        1180,
        -240
      ],
      "id": "0c152228-dd3a-4df3-9c1b-12b7e24a6029",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-flash",
        "options": {
          "maxOutputTokens": 20000,
          "temperature": 0.3
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        380,
        100
      ],
      "id": "1609926a-8f02-4b3a-b47b-91ad9237c229",
      "name": "Google Gemini Chat Model1",
      "credentials": {
        "googlePalmApi": {
          "id": "GCBFWOdP4Hr732eQ",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Get a row": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get many rows": {
      "main": [
        [
          {
            "node": "Sort",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sort": {
      "main": [
        [
          {
            "node": "Split Out1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MCP Client": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          },
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Get a row",
            "type": "main",
            "index": 0
          },
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get many rows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Update a row": {
      "main": [
        []
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Update a row",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing": {
      "main": [
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing1": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "496147da-51a5-4f28-b4b4-876da8d0893c",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "ba0d21f0df791d5f99eb31c8d27515b7c53390f46c3fe1cb1b6ebf0de7d7e768"
  },
  "id": "KSPyKb1XMGlRzT03",
  "tags": []
}